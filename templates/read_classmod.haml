%h1 #{name} (#{type})

- unless has_content

  %p This #{type} does not have any documentation yet.

  %a{:href => url_edit} Create this #{type}

- else

  - if has_synopsis
    %h2#synopsis Synopsis
    = synopsis

  - if has_base
    %h2#base Base #{type}
    %a{:href => base[:url]}= base[:name]

  - if has_includes
    %h2#includes Includes (mixin modules)
    %ul
      - for include in includes
        %li<
          %a{:href => include[:url]}= include[:name]

  - if has_constants
    %h2#constants Constants:
    %ul
      - for constant in constants
        %li
          %strong= constant[:name]
          - if constant[:has_value]
            \= #{constant[:value]}
          - if constant[:has_info]
            = constant[:info]
        
  - if has_cmethods
    %h2#cmethods Class methods
    %ul
      - for cmethod in cmethods
        %li
          %a{:href => cmethod[:url]}= cmethod[:name]

  - if has_imethods
    %h2#imethods Instance methods
    %ul
      - for imethod in imethods
        %li
          %a{:href => imethod[:url]}= imethod[:name]

  - if has_attributes
    %h2#attributes Attributes
    %ul
      - for attribute in attributes
        %li
          %p
            = attribute[:name]
            - if attribute[:has_rw]
              [#{attribute[:rw]}]

          - if attribute[:has_info]
            = attribute[:info]

          - if attribute[:has_type]
            %p Type: #{attribute[:type]}

          - if attribute[:has_default]
            %p Default: #{attribute[:default]}

  - if has_details
    %h2#details Details
    = details

  %a{:href => url_edit} Edit this #{type}
  %br
  %a{:href => url_create} Create a new resource in this #{type}
  %br
  %a{:href => url_edit} Delete this #{type}
